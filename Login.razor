@page "/login"
@rendermode InteractiveServer
@inject Sam530.Services.RadiusService AuthService
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Components.Authorization
@using System.ComponentModel.DataAnnotations

<h3>Iniciar sesión</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="@loginModel" OnValidSubmit="@LoginUser" FormName="frmLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label for="username" class="form-label">Usuario</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Contraseña</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>
    <button class="btn btn-primary" type="submit">Entrar</button>
</EditForm>

@code {
    private LoginModel loginModel = new();
    private string? errorMessage;

    public class LoginModel
    {
       // [Required(ErrorMessage = "User is mandatory")]
        public string Username { get; set; } = string.Empty;

      //  [Required(ErrorMessage = "Password is mandatory")]
        public string Password { get; set; } = string.Empty;
    }

    private async Task LoginUser()
    {
        var ok = await AuthService.LoginAsync(loginModel.Username, loginModel.Password);
        if (ok)
        {
            Navigation.NavigateTo("/");
        }
        else
        {
            errorMessage = "Usuario o contraseña incorrectos.";
        }
    }
}
